{
	"info": {
		"_postman_id": "0a9e4091-918e-4394-8ef2-813722b660ad",
		"name": "PFM Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28518308"
	},
	"item": [
		{
			"name": "/spending-analytics - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test 1\r",
							"// Provera statusnog koda odgovora\r",
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"// Test 2\r",
							"// Provera prisustva svih klju훾nih grupa\r",
							"pm.test(\"Response contains required fields\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.all.keys(\"groups\");\r",
							"    pm.expect(pm.response.json().groups[0]).to.have.all.keys(\"catcode\", \"amount\", \"count\");\r",
							"});\r",
							"\r",
							"// Test 3\r",
							"// Provera da li odgovor sadr탑i o훾ekivani broj grupa > 0\r",
							"pm.test(\"Response contains expected number of groups\", function () {\r",
							"    pm.expect(pm.response.json().groups.length).to.be.above(0);\r",
							"});\r",
							"\r",
							"//Test 4\r",
							"//Definisanje schema\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"groups\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"type\": \"object\",\r",
							"                \"properties\": {\r",
							"                    \"catCode\": { \"type\": \"string\" },\r",
							"                    \"amount\": { \"type\": \"number\" },\r",
							"                    \"count\": { \"type\": \"integer\" }\r",
							"                },\r",
							"                \"required\": [\"catcode\", \"amount\", \"count\"]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\"groups\"]\r",
							"};\r",
							"\r",
							"// Test 4.1\r",
							"// Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"\r",
							"// Test 5\r",
							"// Provera ukupnog broja svih transakcija (count) za catcode = 'A'\r",
							"pm.test(\"Total count of transactions is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.groups[0].count).to.eql(1);\r",
							"});\r",
							"\r",
							"\r",
							"// Test 6\r",
							"// Provera ukupne vrednosti svih transakcija (amount) za catcode = 'A'\r",
							"pm.test(\"Total amount of transactions is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.groups[0].amount).to.eql(18.2);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5258/spending-analytics/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"spending-analytics",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/spending-analytics?catcode=asd - 440 - invalid catcode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 440 Not Found\", function () {\r",
							"    pm.response.to.have.status(440);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"problem\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"details\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\"problem\", \"message\", \"details\"]\r",
							"};\r",
							"\r",
							"//Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    var isValid = tv4.validate(responseJson, schema);\r",
							"    pm.expect(isValid).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5258/spending-analytics?catcode=asd",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"spending-analytics"
					],
					"query": [
						{
							"key": "catcode",
							"value": "asd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/categories/import - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/milos/Downloads/projekat/categories.csv"
						}
					]
				},
				"url": {
					"raw": "http://localhost:5258/categories/import",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"categories",
						"import"
					]
				}
			},
			"response": []
		},
		{
			"name": "/categories - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"items\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"          \"code\": { \"type\": \"string\" },\r",
							"          \"name\": { \"type\": \"string\" },\r",
							"          \"parent-code\": { \"type\": \"string\" }\r",
							"        },\r",
							"        \"required\": [\"code\", \"name\", \"parent-code\"]\r",
							"      }\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\"items\"]\r",
							"}\r",
							"\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5258/categories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "/categories/?parent-id=A - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Testiranje prisustva klju훾nih vrednosti (Presence of key values)\r",
							"pm.test(\"Response contains required fields\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"items\").that.is.an(\"array\").that.is.not.empty;\r",
							"\r",
							"    var firstItem = jsonData.items[0];\r",
							"    pm.expect(firstItem).to.have.property(\"code\", \"0\");\r",
							"    pm.expect(firstItem).to.have.property(\"name\", \"Other\");\r",
							"    pm.expect(firstItem).to.have.property(\"parent-code\", \"A\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5258/categories/?parent-id=A",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"categories",
						""
					],
					"query": [
						{
							"key": "parent-id",
							"value": "A"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/categories/?parent-id=W - 440",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 440 Not Found\", function () {\r",
							"    pm.response.to.have.status(440);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"problem\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"details\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\"problem\", \"message\", \"details\"]\r",
							"};\r",
							"\r",
							"//Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5258/categories/?parent-id=W",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"categories",
						""
					],
					"query": [
						{
							"key": "parent-id",
							"value": "W"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"page-size\": { \"type\": \"integer\" },\r",
							"            \"page\": { \"type\": \"integer\" },\r",
							"            \"total-count\": { \"type\": \"integer\" },\r",
							"            \"total-pages\": { \"type\": \"integer\" },\r",
							"            \"sort-order\": { \"type\": \"string\" },\r",
							"            \"items\": {\r",
							"                \"type\": \"array\",\r",
							"                \"items\": {\r",
							"                    \"type\": \"object\",\r",
							"                    \"properties\": {\r",
							"                        \"id\": { \"type\": \"string\" },\r",
							"                        \"beneficiary-name\": { \"type\": \"string\" },\r",
							"                        \"date\": { \"type\": \"string\", \"format\": \"date-time\" },\r",
							"                        \"direction\": { \"type\": \"string\" },\r",
							"                        \"amount\": { \"type\": \"number\" },\r",
							"                        \"description\": { \"type\": \"string\" },\r",
							"                        \"currency\": { \"type\": \"string\" },\r",
							"                        \"mcc\": { \"type\": [\"string\", \"null\"] },\r",
							"                        \"kind\": { \"type\": \"string\" },\r",
							"                        \"splits\": { \"type\": \"array\" }\r",
							"                    },\r",
							"                    \"required\": [\"id\", \"beneficiary-name\", \"date\", \"direction\", \"amount\", \"description\", \"currency\", \"kind\", \"splits\"]\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"required\": [\"page-size\", \"page\", \"total-count\", \"total-pages\", \"sort-order\", \"items\"]\r",
							"    };\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Response schema is valid\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5258/transactions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions/?transaction-kind=asd - 440",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 440 Not Found\", function () {\r",
							"    pm.response.to.have.status(440);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"problem\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"details\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\"problem\", \"message\", \"details\"]\r",
							"};\r",
							"\r",
							"//Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5258/transactions/?transaction-kind=asd",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions",
						""
					],
					"query": [
						{
							"key": "transaction-kind",
							"value": "asd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions/import - 440",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 440 Not Found\", function () {\r",
							"    pm.response.to.have.status(440);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"problem\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"details\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\"problem\", \"message\", \"details\"]\r",
							"};\r",
							"\r",
							"//Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/milos/Downloads/projekat/transactions.csv"
						}
					]
				},
				"url": {
					"raw": "http://localhost:5258/transactions/import",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions",
						"import"
					],
					"query": [
						{
							"key": "file",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions/24419286/split - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"        \"beneficiary-name\": { \"type\": \"string\" },\r",
							"        \"date\": { \"type\": \"string\", \"format\": \"date-time\" },\r",
							"        \"direction\": { \"type\": \"string\" },\r",
							"        \"amount\": { \"type\": \"number\" },\r",
							"        \"description\": { \"type\": \"string\" },\r",
							"        \"currency\": { \"type\": \"string\" },\r",
							"        \"kind\": { \"type\": \"string\" },\r",
							"        \"splits\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"type\": \"object\",\r",
							"                \"properties\": {\r",
							"                    \"catcode\": { \"type\": \"string\" },\r",
							"                    \"amount\": { \"type\": \"number\" }\r",
							"                },\r",
							"                \"required\": [\"catcode\", \"amount\"]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\"id\", \"beneficiary-name\", \"date\", \"direction\", \"amount\", \"description\", \"currency\", \"kind\", \"splits\"]\r",
							"};\r",
							"\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"splits\": [\r\n    {\r\n      \"catcode\": \"A\",\r\n      \"amount\": 250\r\n    },\r\n    {\r\n      \"catcode\": \"B\",\r\n      \"amount\": 50.1\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5258/transactions/24419286/split",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions",
						"24419286",
						"split"
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions/24419286/split - 400- invalid split amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 Bad Request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"errors\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"type\": \"object\",\r",
							"                \"properties\": {\r",
							"                    \"tag\": {\r",
							"                        \"type\": \"string\"\r",
							"                    },\r",
							"                    \"error\": {\r",
							"                        \"type\": \"string\"\r",
							"                    },\r",
							"                    \"message\": {\r",
							"                        \"type\": \"string\"\r",
							"                    }\r",
							"                },\r",
							"                \"required\": [\"tag\", \"error\", \"message\"]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\"errors\"]\r",
							"};\r",
							"\r",
							"//Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"splits\": [\r\n    {\r\n      \"catcode\": \"A\",\r\n      \"amount\": 223\r\n    },\r\n    {\r\n      \"catcode\": \"B\",\r\n      \"amount\": 50.1\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5258/transactions/24419286/split",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions",
						"24419286",
						"split"
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions/12345678/split 440 - invalid transaction id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 440 Not Found\", function () {\r",
							"    pm.response.to.have.status(440);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"problem\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"details\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\"problem\", \"message\", \"details\"]\r",
							"};\r",
							"\r",
							"//Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"splits\": [\r\n    {\r\n      \"catcode\": \"A\",\r\n      \"amount\": 250\r\n    },\r\n    {\r\n      \"catcode\": \"B\",\r\n      \"amount\": 50.1\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5258/transactions/12345678/split",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions",
						"12345678",
						"split"
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions/24419286/categorize - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"beneficiary-name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"date\": {\r",
							"            \"type\": \"string\",\r",
							"            \"format\": \"date-time\"\r",
							"        },\r",
							"        \"direction\": {\r",
							"            \"type\": \"string\",\r",
							"            \"enum\": [\"c\", \"d\"]\r",
							"        },\r",
							"        \"amount\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"description\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"currency\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"kind\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"catcode\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"splits\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"type\": \"object\",\r",
							"                \"properties\": {\r",
							"                    \"catcode\": {\r",
							"                        \"type\": \"string\"\r",
							"                    },\r",
							"                    \"amount\": {\r",
							"                        \"type\": \"number\"\r",
							"                    }\r",
							"                },\r",
							"                \"required\": [\"catcode\", \"amount\"]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\"id\", \"beneficiary-name\", \"date\", \"direction\", \"amount\", \"description\", \"currency\", \"kind\", \"catcode\", \"splits\"]\r",
							"}\r",
							"\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains correct values\", function () {\r",
							"    pm.expect(pm.response.json()).to.deep.include({\r",
							"        \"id\": \"24419286\",\r",
							"        \"beneficiary-name\": \"Claire Stevens\",\r",
							"        \"date\": \"2021-01-01T01:00:00+01:00\",\r",
							"        \"direction\": \"c\",\r",
							"        \"amount\": 300.1,\r",
							"        \"description\": \"Monthly rent\",\r",
							"        \"currency\": \"USD\",\r",
							"        \"kind\": \"dep\",\r",
							"        \"catcode\": \"C\",\r",
							"        \"splits\": []\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"catcode\": \"C\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5258/transactions/24419286/categorize",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions",
						"24419286",
						"categorize"
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions/12345678/categorize - 440 - invalid transaction id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 440 Not Found\", function () {\r",
							"    pm.response.to.have.status(440);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"problem\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"details\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\"problem\", \"message\", \"details\"]\r",
							"};\r",
							"\r",
							"//Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"catcode\": \"C\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5258/transactions/12345678/categorize",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions",
						"12345678",
						"categorize"
					]
				}
			},
			"response": []
		},
		{
			"name": "/transactions/24419286/categorize - 440 - invalid catcode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 440 Not Found\", function () {\r",
							"    pm.response.to.have.status(440);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"problem\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"details\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\"problem\", \"message\", \"details\"]\r",
							"};\r",
							"\r",
							"//Tesiranje odgovora prema JSON schema:\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"catcode\": \"W\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5258/transactions/24419286/categorize",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5258",
					"path": [
						"transactions",
						"24419286",
						"categorize"
					]
				}
			},
			"response": []
		}
	]
}